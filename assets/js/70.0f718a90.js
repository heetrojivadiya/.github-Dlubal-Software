(window.webpackJsonp=window.webpackJsonp||[]).push([[70],{346:function(t,e,n){"use strict";n.r(e);var s=n(10),a=Object(s.a)({},(function(){var t=this,e=t._self._c;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h1",{attrs:{id:"how-to-query-the-model"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#how-to-query-the-model"}},[t._v("#")]),t._v(" How to query the model")]),t._v(" "),e("p",[t._v("To query the model you start with initializing the connection. This can be done via "),e("code",[t._v('Model(False, "model_name")')]),t._v(". Then use any getter you need to retrieve the data. Our unit tests (RFEM_Python_Client/UnitTests/) are good examples of setting values and getting them back for checking correctness. But in the tests we use currently available (active) model, that is why you see just "),e("code",[t._v("Model()")]),t._v(" there.")]),t._v(" "),e("p",[t._v("If you want to see all currently available web service model functions and types just "),e("code",[t._v("print(Model.clientModel)")]),t._v(". This is the easiest way SUDS module shows everything it recognizes. Even easier is to look at methods and types for "),e("a",{attrs:{href:"https://github.com/Dlubal-Software/RFEM_Python_Client/wiki/WS-Model-Methods-and-Types",target:"_blank",rel:"noopener noreferrer"}},[t._v("model"),e("OutboundLink")],1),t._v(" and "),e("a",{attrs:{href:"https://github.com/Dlubal-Software/RFEM_Python_Client/wiki/WS-Application-Methods-and-Types",target:"_blank",rel:"noopener noreferrer"}},[t._v("application"),e("OutboundLink")],1),t._v(" in our Wiki, but it can be outdated with the new development, meaning new functions will be added.")]),t._v(" "),e("p",[t._v("Whole example:")]),t._v(" "),e("div",{staticClass:"language-js extra-class"},[e("pre",{pre:!0,attrs:{class:"language-js"}},[e("code",[t._v("from suds"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("client "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" Client\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" sys\n\nclient "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("Client")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'http://localhost:8081/wsdl'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n# printout all application functions and types\n"),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("print")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("client"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nmodelLst "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" client"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("service"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("get_model_list")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" client"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("service"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("get_active_model")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'wsdl'")]),t._v("\nmodel "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("Client")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n# printout all model functions and types\n"),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("print")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("model"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])])])}),[],!1,null,null,null);e.default=a.exports}}]);